--11_01 AS SYS
DROP USER sr153;
CREATE USER sr153 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr154;
CREATE USER sr154 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr155;
CREATE USER sr155 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr156;
CREATE USER sr156 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr158;
CREATE USER sr158 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr159;
CREATE USER sr159 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr160;
CREATE USER sr160 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr161;
CREATE USER sr161 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

DROP USER sr163;
CREATE USER sr163 IDENTIFIED BY oracle
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

GRANT create session, alter session TO
  sr153, sr154, sr155, sr156, sr158, sr159, sr160, sr161, sr163;
  
GRANT SELECT, INSERT, UPDATE, DELETE ON oe.orders TO
  sr153, sr154, sr155, sr156, sr158, sr159, sr160, sr161, sr163;
  
GRANT SELECT, INSERT, UPDATE, DELETE ON oe.order_items TO
  sr153, sr154, sr155, sr156, sr158, sr159, sr160, sr161, sr163;

CREATE CONTEXT sales_orders_ctx USING oe.sales_orders_pkg;


-- AS OE
CREATE OR REPLACE PACKAGE sales_orders_pkg
IS
  PROCEDURE set_app_context;
  FUNCTION the_predicate (p_schema VARCHAR2, p_name VARCHAR2)
    RETURN VARCHAR2;
END sales_orders_pkg;
/

CREATE OR REPLACE PACKAGE BODY sales_orders_pkg IS
  
  c_context CONSTANT VARCHAR2(30) := 'SALES_ORDERS_CTX';
  c_attrib CONSTANT VARCHAR2(30) := 'SALES_REP';
  
  PROCEDURE set_app_context IS
    V_USER VARCHAR2(30);
  BEGIN
    SELECT USER INTO V_USER FROM DUAL;
    DBMS_SESSION.SET_CONTEXT(c_context, c_attrib, v_user);
  END set_app_context;
  
  FUNCTION the_predicate (p_schema VARCHAR2, p_name VARCHAR2)
    RETURN VARCHAR2 IS 
    v_context_value VARCHAR2(100) := SYS_CONTEXT(c_context,c_attrib);
    v_restriction VARCHAR2(2000);
  BEGIN
    IF v_context_value LIKE 'SR%' THEN
      v_restriction := 'SALES_REP_ID = SUBSTR('''|| v_context_value || ''',3,3)';
    ELSE
      v_restriction := NULL;
    END IF;
    RETURN v_restriction;
  END the_predicate;
END sales_orders_pkg;
/

--11_04 AS SYS
DECLARE
BEGIN
  DBMS_RLS.ADD_POLICY('OE','ORDERS','OR_ORDERS_ACCESS_POLICY','OE','SALES_ORDERS_PKG.THE_PREDICATE','SELECT,INSERT,UPDATE,DELETE',FALSE,TRUE);
END;
/

--11_05 AS SYS
CREATE OR REPLACE TRIGGER set_id_on_logon
AFTER logon on database
BEGIN
  oe.sales_orders_pkg.set_app_context;
END;
/

--
sqlplus sr153/oracle
select sales_rep_id, count(*) from oe.orders group by sales_rep_id;

